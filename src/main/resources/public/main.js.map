{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.service.ts","webpack:///./src/app/tv-create/tv-create.component.css","webpack:///./src/app/tv-create/tv-create.component.html","webpack:///./src/app/tv-create/tv-create.component.ts","webpack:///./src/app/tv-info/tv-info.component.css","webpack:///./src/app/tv-info/tv-info.component.html","webpack:///./src/app/tv-info/tv-info.component.ts","webpack:///./src/app/tv-list/tv-list.component.css","webpack:///./src/app/tv-list/tv-list.component.html","webpack:///./src/app/tv-list/tv-list.component.ts","webpack:///./src/app/tv.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {Injectable, NgModule} from '@angular/core';\nimport {Routes, RouterModule, CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\nimport {TvListComponent} from \"./tv-list/tv-list.component\";\nimport {TvInfoComponent} from \"./tv-info/tv-info.component\";\nimport {TvCreateComponent} from \"./tv-create/tv-create.component\";\n\nconst routes: Routes = [\n  {path:'list',component:TvListComponent},\n  {path:'info',component:TvInfoComponent},\n  {path:'info/:id',component:TvInfoComponent},\n  {path:'add',component:TvCreateComponent},\n  {path:'',component:TvListComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (localStorage.getItem('currentUser')) {\n      // logged in so return true\n      return true;\n    }\n\n    // not logged in so redirect to login page with the return url\n    this.router.navigate(['/login'], { queryParams: { returnUrl: state.url }});\n    return false;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<title>Sellions task</title>\\n<div class=\\\"container-fluid\\\">\\n  <nav xmlns:th=\\\"http://www.thymeleaf.org\\\"\\n       xmlns=\\\"http://www.w3.org/1999/xhtml\\\"\\n       th:fragment=\\\"nav\\\"\\n       class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"/\\\">Sellions</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"list\\\">List</a>\\n        </li>\\n      </ul>\\n      <div class=\\\"navbar-text\\\"></div>\\n      <form class=\\\"form-inline my-2 my-lg-0 ml-3\\\">\\n        <button class=\\\"btn btn-outline-success my-2 my-sm-0\\\" type=\\\"submit\\\">Sign out</button>\\n      </form>﻿\\n    </div>\\n  </nav>\\n  <div class=\\\"container\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {AppService} from \"./app.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Sellions task';\n  data = {};\n\n  constructor(private app: AppService, private http: HttpClient, private router: Router) {}\n\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {Injectable, NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {FormsModule} from \"@angular/forms\";\nimport {HTTP_INTERCEPTORS, HttpClientModule, HttpHandler, HttpInterceptor, HttpRequest} from \"@angular/common/http\";\nimport {Routes} from \"@angular/router\";\nimport {AppService} from \"./app.service\";\nimport {TvInfoComponent} from './tv-info/tv-info.component';\nimport {TvListComponent} from './tv-list/tv-list.component';\nimport {TvCreateComponent} from './tv-create/tv-create.component';\nimport {MatSortModule} from \"@angular/material\";\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', redirectTo: '/list'},\n  { path:'list',component:TvListComponent},\n  { path:'info',component:TvInfoComponent}\n];\n\n@Injectable()\nexport class XhrInterceptor implements HttpInterceptor {\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    const xhr = req.clone({\n      headers: req.headers.set('X-Requested-With', 'XMLHttpRequest')\n    });\n    return next.handle(xhr);\n  }\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TvInfoComponent,\n    TvListComponent,\n    TvCreateComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    MatSortModule\n  ],\n  providers: [AppService, { provide: HTTP_INTERCEPTORS, useClass: XhrInterceptor, multi: true }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders, HttpResponse,HttpRequest } from \"@angular/common/http\";\nimport {Observable} from \"rxjs/index\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppService {\n\n  constructor(private http: HttpClient) {}\n\n  getTvs():Observable<any>{\n    const url = 'http://localhost:8080';\n    return this.http.get(url+'/tvs');\n  }\n\n  addTv(tv: Object): Observable<Object> {\n    const url = 'http://localhost:8080';\n    return this.http.post(url + '/tvs',tv);\n  }\n\n  getTv(id:number):Observable<Object>{\n    const url = 'http://localhost:8080';\n    return this.http.get(url+'/tvs/'+id)\n  }\n\n  updateTv(id: number, tv: Object): Observable<Object> {\n    const url = 'http://localhost:8080';\n    return this.http.put(url+'/tvs/'+id, tv);\n  }\n\n  deleteTv(id: number): Observable<any> {\n    const url = 'http://localhost:8080/tvs/delete/'+id;\n    console.log(url);\n    return this.http.get(url);\n\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3R2LWNyZWF0ZS90di1jcmVhdGUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container mt-5\\\">\\n<h3>Create Tv</h3>\\n<div [hidden]=\\\"submitted\\\">\\n  <form (ngSubmit)=\\\"onSubmit()\\\" class=\\\"mt-4\\\">\\n    <div *ngFor=\\\"let e of paramRows\\\">\\n      <div class=\\\"row mt-3\\\">\\n        <select name=\\\"tvParam+{{paramIndex}}}\\\" class=\\\"form-control col-md-3\\\" [(ngModel)]=\\\"selectedParam[e]\\\">\\n          <option *ngFor=\\\"let param of parametrs\\\">{{param}}</option>\\n        </select>\\n        <div class=\\\"col\\\" *ngIf=\\\"selectedParam[paramIndex]=='Condition'\\\">\\n          <select name=\\\"tvParamCondition\\\" class=\\\"form-control\\\" [(ngModel)] = \\\"paramet[e]\\\" >\\n            <option>Working</option>\\n            <option>Broken</option>\\n          </select>\\n        </div>\\n        <div class=\\\"col\\\" *ngIf=\\\"selectedParam[paramIndex]!='Condition'\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"tvParamValue\\\" [(ngModel)] = \\\"paramet[e]\\\">\\n        </div>\\n      </div>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-success mt-3\\\">Submit</button>\\n  </form>\\n</div>\\n\\n<div [hidden]=\\\"!submitted\\\">\\n  <h4>You submitted successfully!</h4>\\n  <a href=\\\"/list\\\">Go to List</a>\\n</div>\\n</div>\\n\"","import {Component} from '@angular/core';\nimport {Tv} from \"../tv\";\nimport {AppService} from \"../app.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-tv-create',\n  templateUrl: './tv-create.component.html',\n  styleUrls: ['./tv-create.component.css'],\n\n})\nexport class TvCreateComponent {\n\n  tv:Tv = new Tv();\n  submitted = false;\n  parametrs = [\"Brand\",\"Model\",\"Color\",\"Display technology\",\"Screen size\",\"Refresh rate\",\"Weight\",\"Condition\",\"Inputs\"];\n  selectedParam=[];\n  paramIndex=0;\n  paramet = [];\n  paramRows = [0,1,2,3,4,5,6,7,8];\n  r = 0;\n\n\n  checkSelect(){\n    for (let p in this.parametrs){\n      let index = this.selectedParam.indexOf(this.parametrs[p]);\n      if(index>-1){\n        console.log(index);\n        let ind = this.parametrs.indexOf(this.selectedParam[index]);\n        this.parametrs.splice(ind,1)\n      }\n    }\n\n  }\n  passData(){\n    for (let s of this.selectedParam){\n      if (s.indexOf(' ')>0){\n        s = s.split(' ').join('_');\n      }\n      let temp = s.toLocaleLowerCase();\n      console.log(this.r);\n      console.log(this.paramet);\n      this.tv[temp] = this.paramet[this.r];\n      this.r=this.r+1;\n\n    }\n  }\n\n  constructor(\n    private app:AppService,\n    private router:Router\n  ) { }\n\n  newTv():void{\n    this.submitted = false;\n    this.tv = new Tv();\n  }\n\n  saveTv(){\n    this.app.addTv(this.tv).subscribe(data=>\n    {console.log(data)\n    this.router.navigateByUrl('/list')\n    }, error=>console.log(error));\n    this.tv = new Tv();\n  }\n\n  onSubmit(){\n    this.submitted =true;\n    this.passData();\n    this.saveTv();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3R2LWluZm8vdHYtaW5mby5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"panel panel-default\\\">\\r\\n  <div class=\\\"panel-heading\\\">\\r\\n    <h1>{{tv.brand}}  {{tv.model}}</h1>\\r\\n  </div>\\r\\n  <form>\\r\\n  <div class=\\\"panel-body\\\">\\r\\n    <table class=\\\"table table-striped table-bordered\\\">\\r\\n      <tbody>\\r\\n      <tr>\\r\\n        <th>Id</th>\\r\\n        <td>{{tv.id}}</td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th>Brand</th>\\r\\n        <td><input type=\\\"text\\\" name=\\\"brand\\\" class=\\\"form-control\\\" [(value)] = tv.brand [(ngModel)] = \\\"tv.brand\\\"></td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th>Model</th>\\r\\n        <td><input type=\\\"text\\\" name=\\\"model\\\" class=\\\"form-control\\\" [(value)] = tv.model [(ngModel)] = \\\"tv.model\\\"></td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th>Color</th>\\r\\n        <td><input type=\\\"text\\\" name=\\\"color\\\" class=\\\"form-control\\\" [(value)] = tv.color [(ngModel)] = \\\"tv.color\\\"></td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th>Display Technology</th>\\r\\n        <td><input type=\\\"text\\\" name=\\\"display_technology\\\" class=\\\"form-control\\\" [(value)] = tv.display_technology [(ngModel)] = \\\"tv.display_technology\\\"></td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th >Screen Size</th>\\r\\n        <td><input type=\\\"text\\\" name=\\\"screen_size\\\" class=\\\"form-control\\\" [(value)] = tv.screen_size [(ngModel)] = \\\"tv.screen_size\\\"></td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th >Refresh Rate</th>\\r\\n        <td><input type=\\\"text\\\" name=\\\"refresh_rate\\\" class=\\\"form-control\\\" [(value)] = tv.refresh_rate [(ngModel)] = \\\"tv.refresh_rate\\\"></td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th >Weight</th>\\r\\n        <td><input type=\\\"text\\\" name=\\\"weight\\\" class=\\\"form-control\\\" [(value)] = tv.weight [(ngModel)] = \\\"tv.weight\\\"></td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th>Condition</th>\\r\\n        <td>\\r\\n          <select class=\\\"form-control\\\" name=\\\"condition\\\" [(value)] = \\\"tv.condition\\\" [(ngModel)] = \\\"tv.condition\\\">\\r\\n            <option>Working</option>\\r\\n            <option>Broken</option>\\r\\n          </select>\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th >Inputs</th>\\r\\n        <td><input type=\\\"text\\\" name=\\\"inputs\\\" class=\\\"form-control\\\" [(value)] = tv.inputs [(ngModel)] = \\\"tv.inputs\\\"></td>\\r\\n      </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n    <button class=\\\"btn btn-success\\\" type=\\\"submit\\\" (click)=\\\"upTv()\\\">Update</button>\\r\\n    <button class=\\\"btn btn-danger ml-2\\\" (click)=\\\"router.navigateByUrl(['/list'])\\\">Cancel</button>\\r\\n  </div>\\r\\n  </form>\\r\\n</div>\\r\\n\"","import {Component, OnInit} from '@angular/core';\nimport {Tv} from \"../tv\";\nimport {AppService} from \"../app.service\";\nimport {TvListComponent} from \"../tv-list/tv-list.component\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {Subscription} from \"rxjs/index\";\n\n@Component({\n  selector: 'app-tv-info',\n  templateUrl: './tv-info.component.html',\n  styleUrls: ['./tv-info.component.css'],\n  providers:[TvListComponent]\n})\nexport class TvInfoComponent implements OnInit {\n\n  tv:any = {};\n  sub:Subscription;\n\n  constructor(\n    private app:AppService,\n    private tvList: TvListComponent,\n    private router:Router,\n    private route:ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    this.sub = this.route.params.subscribe(params=>{\n      const id = params['id'];\n      if(id){\n        this.app.getTv(id).subscribe((tv:any)=>{\n          if(tv){\n            this.tv = tv;\n          }else{\n            console.log('Not Found');\n            this.gotoList()\n          }\n        });\n      }\n    });\n  }\n\n  gotoList(){\n    this.router.navigateByUrl('/list')\n  }\n\n  upTv(){\n    this.app.updateTv(this.tv.id,this.tv).subscribe(data=>{\n        console.log(data);\n      this.gotoList()\n    }, error=>console.log(error));\n    this.tv = new Tv();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3R2LWxpc3QvdHYtbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"panel panel-default\\\">\\n  <div class=\\\"panel-heading\\\">\\n    <h1>Tv's</h1>\\n  </div>\\n  <div class=\\\"panel-body\\\">\\n    <button class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/add']\\\">Add</button>\\n    <table class=\\\"table table-striped table-bordered\\\">\\n      <thead>\\n      <tr>\\n        <th>Id</th>\\n        <th>Brand</th>\\n        <th>Model</th>\\n        <th>Actions</th>\\n      </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let tv of Tvs | async\\\">\\n          <td>{{tv.id}}</td>\\n          <td>{{tv.brand}}</td>\\n          <td>{{tv.model}}</td>\\n          <td>\\n            <button class=\\\"btn btn-info\\\" [routerLink] = \\\"['/info',tv.id]\\\">Edit</button>\\n            <button class=\\\"btn btn-danger ml-2\\\" (click)=\\\"delTv(tv.id)\\\">Delete</button>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {Tv} from \"../tv\";\nimport {Observable} from \"rxjs/index\";\nimport {AppService} from \"../app.service\";\nimport {Router} from \"@angular/router\";\nimport {MatSort} from \"@angular/material\";\n\n@Component({\n  selector: 'app-tv-list',\n  templateUrl: './tv-list.component.html',\n  styleUrls: ['./tv-list.component.css']\n})\nexport class TvListComponent implements OnInit {\n\n  constructor(\n    private app:AppService,\n    private router:Router\n  ) { }\n  Tvs:Observable<Tv[]>;\n\n  ngOnInit() {\n    this.Tvs = this.app.getTvs();\n  }\n\n  delTv(id:number){\n    this.Tvs = this.app.deleteTv(id)\n  }\n}\n","export class Tv  {\r\n  id: number;\r\n  brand: string;\r\n  model: string;\r\n  color:string;\r\n  display_technology:string;\r\n  screen_size:string;\r\n  refresh_rate:string;\r\n  weight:string;\r\n  condition:string;\r\n  inputs:string;\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}